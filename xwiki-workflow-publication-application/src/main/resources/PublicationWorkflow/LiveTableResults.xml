<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>PublicationWorkflow</web>
<name>LiveTableResults</name>
<language></language>
<defaultLanguage>fr</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>xwiki:XWiki.fveron</creator>
<author>xwiki:XWiki.fveron</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.fveron</contentAuthor>
<creationDate>1364306721000</creationDate>
<date>1364473441000</date>
<contentUpdateDate>1364473441000</contentUpdateDate>
<version>1.8</version>
<title>$msg.get("platform.livetable.results")</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>{{include document="XWiki.LiveTableResultsMacros" /}}

{{velocity wiki="false"}}
#**
 * Adds information about each live table row to the JSON returned by a live table data call.
 * NOTE: This macro uses Velocity variables defined by gridresultwithfilter_buildQuery.
 *
 * @param $map stores the JSON in memory so that it can be adjusted before serialization
 *#
#macro(gridresult_buildRowsJSON $map)
  #set($offset = $mathtool.toInteger($request.get('offset')))
  ## offset starts from 0 in velocity and 1 in javascript
  #set($offset = $offset - 1)
  #if (!$offset || $offset &lt; 0)
    #set($offset = 0)
  #end
  #set($limit = $mathtool.toInteger($request.get('limit')))
  #if (!$limit)
    #set ($limit = 15)
  #end
  ## INSEE Custom start : remove undisplay hidden document
  #set($query = $services.query.hql($sql).addFilter('unique').setLimit($limit).setOffset($offset).bindValues($sqlParams))
  ## INSEE Custom stop
  #set($items = $query.execute())
  #set($discard = $map.put('totalrows', $query.count()))
  #set($discard = $map.put('returnedrows', $mathtool.min($items.size(), $limit)))
  #set($discard = $map.put('offset', $mathtool.add($offset, 1)))
  #set($rows = [])
  #foreach($item in $items)
    #gridresult_buildRowJSON($item $rows)
  #end
  #set($discard = $map.put('rows', $rows))
#end


#set ($extra = '')
#set ($params = [])
#if ("$!request.space" != '')
  #set ($extra = "${extra} and doc.space = ?")
  #set ($discard = $params.add($request.space))
#end
#if ("$!request.parent" != '')
  #set ($extra = "${extra} and doc.parent = ?")
  #set ($discard = $params.add($request.parent))
#end
#if ("$!request.orphaned" == '1')
  #set ($extra = "${extra} and doc.parent='' and doc.name&lt;&gt;'WebHome'")
#end

#if($request.getParameterValues('workflowList').size() &gt; 0)
  #set($from = ", StringProperty workflow")

  #set ($extra = "${extra} and workflow.id.id = obj.id and workflow.id.name = ?")
  #set ($discard = $params.add('workflow'))

  #set ($workflowCond = "workflow.value in (")
  #foreach($workflowItem in $!request.getParameterValues('workflowList'))
    #if($velocityCount != 1)
      #set ($workflowCond = $workflowCond + ',')
    #end
    #set ($workflowCond = $workflowCond + ' ? ')
    #set ($discard = $params.add("${workflowItem}"))
  #end
  #set ($workflowCond = $workflowCond + ')')
  #set ($extra = "${extra} and ${workflowCond}")
#end
#gridresultwithfilter("$!request.classname" $request.collist.split(',') "$!from" "${extra}" $params)
{{/velocity}}
</content></xwikidoc>